<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <title>Ferren Dash</title>
  <meta content="width=device-width, initial-scale=1.0" name="viewport">
  <meta content="[Ferren Dash](https://discord.gg/4TeeFAdnuD)" name="keywords">
  <meta content="Ferren Dash, Website for the discord bot Ferren! changelogs news latest post updated here!"
    name="description">
  <meta name="theme-color" content="#efc75e">
  <meta property="og:image" content="/FerrenBot.png">
  <meta property="og:url" content="https://ferren.fr.to/">
  <link href="/FerrenBot.png" rel="icon">
  <!-- Google Web Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link
    href="https://fonts.googleapis.com/css2?family=Barlow:wght@500;600;700&family=Open+Sans:wght@400;600&display=swap"
    rel="stylesheet">

  <!-- Icon Font Stylesheet -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

  <!-- Customized Bootstrap Stylesheet -->
  <% for (const link of css) { %>
    <link rel="stylesheet" href="<%= link %>">
    <% } %>
<style>
  @media screen and (max-width: 991px) {
    
  }
</style>
</head>
<%- include('navbar') %>
  <div class="container-fluid bg-secondary p-0">
    <div class="row g-0">
      <div class="col-lg-6 py-6 px-5">
        <h1 class="display-5 mb-4">Status<span class="text-primary"> Page</span></h1>
        <h4 class="text-primary mb-4">All system operational!</h4>
      </div>
      <div class="dis-none col-lg-6">
        <div class="h-100 d-flex flex-column justify-content-center bg-primary p-5">
          <img class="imageferren"
            src="https://cdn.discordapp.com/attachments/1064773686550343722/1096318236770975844/FerrenBot.png">
        </div>
      </div>
    </div>
  </div>

  <div class="justify-content-center container-fluid " style="padding-right: 45px; padding-left: 45px;">
    <div class="text-center mx-auto mb-5" style="max-width: 600px;">
      <hr class="w-25 mx-auto bg-primary">
      <h1 class="display-5 mb-0">Services!</h1>
      <hr class="w-25 mx-auto bg-primary">
    </div>
    <!-- PC -->
    <div class="d-none d-lg-block service-item-2 size my-2">
      <div class="monitor-list">
        <% data.psp.monitors.forEach(function(monitor) { %>
          <div class="monitor-row">
            <% if (monitor.statusClass==="success" ) { %>

              <div class="flex flex-bw flex-wrap">
                <div class="monitor-row-header flex text-align-start">
                  <%= monitor.name %> | <span class="percentage">
                      <%= monitor['90dRatio'].ratio %>%
                    </span>
                </div>
                <div class="text-align-end">
                  <span class="dot-success"></span> <span class="operational text-align-end">Operational</span>
                </div>
              </div>
              <div class="monitor-chart">
                <svg id="dynamic-svg" width="100%" height="30" xmlns="http://www.w3.org/2000/svg" version="1.1"
                  viewBox="0 0 816 30">
                  <% monitor.dailyRatios.forEach(function(dailyRatio, index) { %>
                    <rect height="30" width="6" x="<%= 800.8 - (index * 10) %>" y="0"
                      fill="<%= (dailyRatio.label === 'success' ? '#efc75e' : (dailyRatio.label === 'warning' && dailyRatio.ratio > 60 ? '#fa6e2d' : (dailyRatio.label === 'warning' && dailyRatio.ratio <= 60 ? '#fa3e3e' : '#9a9184'))) %>""
                      fill-opacity=" 1" rx="3" ry="3"
                      uk-tooltip="title: <%= formatDate(dailyRatio.label) %>, ratio: <%= dailyRatio.ratio %>;"
                      style="--darkreader-inline-fill: <%= (dailyRatio.label === 'success' ? '#efc75e' : (dailyRatio.label === 'warning' && dailyRatio.ratio > 60 ? '#fa6e2d' : (dailyRatio.label === 'warning' && dailyRatio.ratio <= 60 ? '#fa3e3e' : '#9a9184'))) %>"
                      ;" title="" aria-expanded="false"></rect>
                    <% }); %>
                </svg>
              </div>

              <% } else { %>

                <div class="flex flex-bw flex-wrap">
                  <div class="monitor-row-header flex text-align-start">
                    <%= monitor.name %> | <span class="percentage">
                        <%= monitor['90dRatio'].ratio %>%
                      </span>
                  </div>
                  <div class="text-align-end">
                    <span class="dot-down"></span> <span class="down text-align-end">Down</span>
                  </div>
                </div>
                <div class="monitor-chart">
                  <svg id="dynamic-svg" width="100%" height="30" xmlns="http://www.w3.org/2000/svg" version="1.1"
                    viewBox="0 0 816 30">
                    <% monitor.dailyRatios.forEach(function(dailyRatio, index) { %>
                      <rect height="30" width="6" x="<%= 800.8 - (index * 10) %>" y="0"
                        fill="<%= (dailyRatio.label === 'success' ? '#efc75e' : (dailyRatio.label === 'warning' && dailyRatio.ratio > 60 ? '#fa6e2d' : (dailyRatio.label === 'warning' && dailyRatio.ratio <= 60 ? '#fa3e3e' : '#9a9184'))) %>""
                        fill-opacity=" 1" rx="3" ry="3"
                        uk-tooltip="title: <%= formatDate(dailyRatio.label) %>, ratio: <%= dailyRatio.ratio %>;"
                        style="--darkreader-inline-fill: <%= (dailyRatio.label === 'success' ? '#efc75e' : (dailyRatio.label === 'warning' && dailyRatio.ratio > 60 ? '#fa6e2d' : (dailyRatio.label === 'warning' && dailyRatio.ratio <= 60 ? '#fa3e3e' : '#9a9184'))) %>"
                        ;" title="" aria-expanded="false"></rect>
                      <% }); %>
                  </svg>
                </div>

                <% } %>

          </div>

          <% }); %>
      </div>
    </div>
    <!--mobi-->
    <div class="d-block d-lg-none service-item-2 size my-2">
      <div class="monitor-list">
        <% data.psp.monitors.forEach(function(monitor) { %>
          <div class="monitor-row">
            <% if (monitor.statusClass==="success" ) { %>

              <div class="flex flex-bw flex-wrap">
                <div class="monitor-row-header flex text-align-start">
                  <%= monitor.name %> | <span class="percentage">
                      <%= monitor['90dRatio'].ratio %>%
                    </span>
                </div>
                <div class="text-align-end">
                  <span class="dot-success"></span> <span class="operational text-align-end">Operational</span>
                </div>
              </div>
              <div class="monitor-chart">
                <svg id="dynamic-svg" width="100%" height="30" xmlns="http://www.w3.org/2000/svg" version="1.1"
                  viewBox="0 0 300 30">
                  <% monitor.dailyRatios.forEach(function(dailyRatio, index) { %>
                    <rect height="30" width="6" x="<%= 280.8 - (index * 10) %>" y="0"
                      fill="<%= (dailyRatio.label === 'success' ? '#efc75e' : (dailyRatio.label === 'warning' && dailyRatio.ratio > 60 ? '#fa6e2d' : (dailyRatio.label === 'warning' && dailyRatio.ratio <= 60 ? '#fa3e3e' : '#9a9184'))) %>""
                      fill-opacity=" 1" rx="3" ry="3"
                      uk-tooltip="title: <%= formatDate(dailyRatio.label) %>, ratio: <%= dailyRatio.ratio %>;"
                      style="--darkreader-inline-fill: <%= (dailyRatio.label === 'success' ? '#efc75e' : (dailyRatio.label === 'warning' && dailyRatio.ratio > 60 ? '#fa6e2d' : (dailyRatio.label === 'warning' && dailyRatio.ratio <= 60 ? '#fa3e3e' : '#9a9184'))) %>"
                      ;" title="" aria-expanded="false"></rect>
                    <% }); %>
                </svg>
              </div>

              <% } else { %>

                <div class="flex flex-bw flex-wrap">
                  <div class="monitor-row-header flex text-align-start">
                    <%= monitor.name %> | <span class="percentage">
                        <%= monitor['90dRatio'].ratio %>%
                      </span>
                  </div>
                  <div class="text-align-end">
                    <span class="dot-down"></span> <span class="down text-align-end">Down</span>
                  </div>
                </div>
                <div class="monitor-chart">
                  <svg id="dynamic-svg" width="100%" height="30" xmlns="http://www.w3.org/2000/svg" version="1.1"
                    viewBox="0 0 816 30">
                    <% monitor.dailyRatios.forEach(function(dailyRatio, index) { %>
                      <rect height="30" width="6" x="<%= 800.8 - (index * 10) %>" y="0"
                        fill="<%= (dailyRatio.label === 'success' ? '#efc75e' : (dailyRatio.label === 'warning' && dailyRatio.ratio > 60 ? '#fa6e2d' : (dailyRatio.label === 'warning' && dailyRatio.ratio <= 60 ? '#fa3e3e' : '#9a9184'))) %>""
                        fill-opacity=" 1" rx="3" ry="3"
                        uk-tooltip="title: <%= formatDate(dailyRatio.label) %>, ratio: <%= dailyRatio.ratio %>;"
                        style="--darkreader-inline-fill: <%= (dailyRatio.label === 'success' ? '#efc75e' : (dailyRatio.label === 'warning' && dailyRatio.ratio > 60 ? '#fa6e2d' : (dailyRatio.label === 'warning' && dailyRatio.ratio <= 60 ? '#fa3e3e' : '#9a9184'))) %>"
                        ;" title="" aria-expanded="false"></rect>
                      <% }); %>
                  </svg>
                </div>

                <% } %>

          </div>

          <% }); %>
      </div>
    </div>
    <div class="d-none d-lg-block service-item-2 size">
      <div class="flex flex-bw flex-wrap">
        <div class="monitor-row-header flex text-align-start">API Response Time</div>
        <div class="text-align-end">
          <span class="dot-success"></span> <span id="avgData" class="operational text-align-end"></span>
        </div>
      </div>
        <canvas id="myChart" height="50"></canvas>
    </div>
    <div class="d-block d-lg-none service-item-2 size">
      <div class="flex flex-bw flex-wrap">
        <div class="monitor-row-header flex text-align-start">API Response Time</div>
        <div class="text-align-end">
          <span class="dot-success"></span> <span id="avgData2" class="operational text-align-end"></span>
        </div>
      </div>
        <canvas id="myChart2" height="100"></canvas>
    </div>
  </div>

  <div class="container-fluid text-secondary p-5">
    <div class="row g-5">
      <div class="col-lg-3 col-md-6">
        <h3 class="text-white mb-4">Quick Links</h3>
        <div class="d-flex flex-column justify-content-start">
          <a class="text-secondary mb-2" href="https://ferren.fr.to"><i
              class="bi bi-arrow-right text-primary me-2"></i>Home</a>
          <a class="text-secondary mb-2" href="https://ferren.fr.to/changelogs"><i
              class="bi bi-arrow-right text-primary me-2"></i>Changelogs</a>
          <a class="text-secondary mb-2" href="https://ferren.fr.toservers"><i
              class="bi bi-arrow-right text-primary me-2"></i>Servers</a>

        </div>
      </div>
      <div class="col-lg-3 col-md-6">
        <h3 class="text-white mb-4">Popular Links</h3>
        <div class="d-flex flex-column justify-content-start">
          <a class="text-secondary mb-2" href="https://ferren.fr.to"><i
              class="bi bi-arrow-right text-primary me-2"></i>Home</a>
          <a class="text-secondary mb-2" href="https://ferren.fr.to/changelogs"><i
              class="bi bi-arrow-right text-primary me-2"></i>Changelogs</a>
          <a class="text-secondary mb-2" href="https://ferren.fr.to/servers"><i
              class="bi bi-arrow-right text-primary me-2"></i>Servers</a>

        </div>
      </div>
      <div class="col-lg-3 col-md-6">
        <h3 class="text-white mb-4">Important</h3>
        <div class="d-flex flex-column justify-content-start">
          <a class="text-secondary mb-2" href="https://ferren.fr.to/tos"><i class="bi bi-arrow-right text-primary me-2"></i>Terms of
            service</a>
          <a class="text-secondary mb-2" href="https://ferren.fr.to/privacy"><i class="bi bi-arrow-right text-primary me-2"></i>Privacy
            policy</a>
        </div>
      </div>
      <div class="col-lg-3 col-md-6">
        <h3 class="text-white mb-4">Get In Touch</h3>
        <p class="mb-2"><i class="bi bi-geo-alt text-primary me-2"></i>India</p>
        <p class="mb-2"><i class="bi bi-envelope-open text-primary me-2"></i>kuatercraft@gmail.com</p>
      </div>
    </div>
  </div>
  <div class="container-fluid text-secondary text-center border-top py-4 px-5"
    style="border-color: rgba(256, 256, 256, .1) !important;">
    <p class="m-0">&copy; <a class="text-secondary border-bottom" href="#">Ferren Dashboard</a>. All Rights
      Reserved.
  </div>

  <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="lib/easing/easing.min.js"></script>
  <script src="lib/waypoints/waypoints.min.js"></script>
  <script src="lib/owlcarousel/owl.carousel.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <script>
    async function chart() {
      const ctx = document.getElementById('myChart').getContext('2d');
      const data = await fetch("/bootstrap-bundle-min-js", {
        method: "POST",
        headers: {
          "Authorization": "Bearer a9-u1816316-2eac1ced9069c16f7ef10fde"
        }
      })
      const response = await data.json();
      const responseTimes = response.responseTimes.map(([timestamp, responseTime]) => ({
        x: new Date(timestamp * 1000),
        y: responseTime,
      }));
      const skipped = (ctx, value) => ctx.p0.skip || ctx.p1.skip ? value : undefined;
      const down = (ctx, value) => ctx.p0.parsed.y > ctx.p1.parsed.y ? value : undefined;
      new Chart(ctx, {
        type: 'line',
        data: {
          labels: responseTimes.map(entry => entry.x),
          datasets: [{
            label: 'API Response Time',
            data: responseTimes.map(entry => entry.y),
            backgroundColor: 'rgba(239, 199, 94, 0.2)',
            borderColor: 'rgba(239, 199, 94, 1)',
            borderWidth: 1,
            segment: {
              borderColor: ctx => skipped(ctx, 'rgb(0,0,0,0.2)') || down(ctx, 'rgb(192,75,75)'),
              borderDash: ctx => skipped(ctx, [6, 6]),
            },
            spanGaps: true
          }]
        },
        options: {
          interaction: {
            intersect: false
          },
          responsive: true,
          plugins: {
            tooltip: {
              mode: 'index',
              intersect: false
            },
          },
          hover: {
            mode: 'index',
            intersec: true
          },
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                stepSize: 500,
              },
              max: 1000
            },
            x: {
              display: false,
              ticks: {
                stepSize: 500,
              },
            },
          }
        }
      });
    };
    chart()
  </script>
  <script>
    async function chart2() {
      const ctx = document.getElementById('myChart2').getContext('2d');
      const data = await fetch("/bootstrap-bundle-min-js-2", {
        method: "POST",
        headers: {
          "Authorization": "Bearer a9-u1816316-2eac1ced9069c16f7ef10fde"
        }
      })
      const response = await data.json();
      const responseTimes = response.responseTimes.map(([timestamp, responseTime]) => ({
        x: new Date(timestamp * 1000),
        y: responseTime,
      }));
      const skipped = (ctx, value) => ctx.p0.skip || ctx.p1.skip ? value : undefined;
      const down = (ctx, value) => ctx.p0.parsed.y > ctx.p1.parsed.y ? value : undefined;
      new Chart(ctx, {
        type: 'line',
        data: {
          labels: responseTimes.map(entry => entry.x),
          datasets: [{
            label: 'API Response Time',
            data: responseTimes.map(entry => entry.y),
            backgroundColor: 'rgba(239, 199, 94, 0.2)',
            borderColor: 'rgba(239, 199, 94, 1)',
            borderWidth: 1,
            segment: {
              borderColor: ctx => skipped(ctx, 'rgb(0,0,0,0.2)') || down(ctx, 'rgb(192,75,75)'),
              borderDash: ctx => skipped(ctx, [6, 6]),
            },
            spanGaps: true
          }]
        },
        options: {
          interaction: {
            intersect: false
          },
          responsive: true,
          plugins: {
            tooltip: {
              mode: 'index',
              intersect: false
            },
          },
          hover: {
            mode: 'index',
            intersec: true
          },
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                stepSize: 500,
              },
              max: 1000
            },
            x: {
              display: false,
              ticks: {
                stepSize: 500,
              },
            },
          }
        }
      });
    };
    chart2()
  </script>
  <script>
    async function avg() {
      const data = await fetch("jquery-bundle-min-js")
      const reponse = await data.json();
      document.getElementById("avgData").innerHTML = reponse.value
      document.getElementById("avgData2").innerHTML = reponse.value
    }
    avg()
  </script>
  </body>
</html>